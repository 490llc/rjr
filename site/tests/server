#!/usr/bin/ruby
# A rjr server to test jrw.js

require 'rjr/nodes/web'
require 'rjr/nodes/ws'
require 'rjr/nodes/multi'

def setup_signals(node)
  Signal.trap("INT") {
    node.halt
  }
end

RJR::Logger.log_level = ::Logger::DEBUG

ws_node    = RJR::Nodes::WS.new    :node_id => 'jrw_test', :host   => 'localhost', :port => 8080
www_node   = RJR::Nodes::Web.new   :node_id => 'jrw_test', :host   => 'localhost', :port => 8888
multi_node = RJR::Nodes::Multi.new :nodes => [ws_node, www_node]

multi_node.dispatcher.handle("success_method") { |param1|
  puts "Invoked success_method"
  "response-#{param1}"
}

multi_node.dispatcher.handle("failed_method") {
  puts "Invoked failed_method"
  raise ArgumentError, "epic fail"
}

multi_node.dispatcher.handle("callback_method") {
  puts "Invoked callback_method"
  @rjr_callback.notify 'client_callback', 'cb'
}

setup_signals(multi_node)
multi_node.listen
multi_node.join
